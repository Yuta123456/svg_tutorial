{"version":3,"sources":["screens/CalculationContent.js","screens/Header.js","screens/InputContent.js","screens/Footer.js","screens/Input.js","screens/DescriptionContent.js","screens/Description.js","App.js","serviceWorker.js","index.js"],"names":["n","m","Header","class","React","Component","InputContent","props","state","text","document","querySelector","value","this","update","className","type","onChange","setCol","rows","id","name","onClick","saveText","exact","to","src","tar","x","y","vx","vy","width","window","innerWidth","height","innerHeight","updatePosition","i","updateVelocity","k","L","s","t","d","distance","theta","Math","atan","w","cos","sin","applySpringForce","q","j","applyRepulsiveForce","strength","applyCenteringForce","applyResistanceForce","max","sqrt","pow","CalculationContent","color","nodes","lines","input","replace","split","Number","push","random","console","log","calcPoint","degree","Array","fill","maxDegree","apply","colored","parseInt","toString","slice","cx","cy","r","stroke","textAnchor","dominantBaseline","length","x1","y1","x2","y2","Footer","href","style","Input","setState","Fragment","textUpdate","setColored","DescriptionContent","Description","App","path","component","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3bedfecc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nvar src = [];\r\nvar tar = [];\r\nvar x = [];\r\nvar y = [];\r\nvar vx = [];\r\nvar vy = [];\r\nlet n, m;\r\nconst width = window.innerWidth *3 / 4, height = window.innerHeight *3 / 4;\r\nvar minDistance = 0.001;\r\nclass CalculationContent extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={color:false};\r\n    }\r\n    render() {\r\n        var nodes = [];\r\n        var lines = [];\r\n        calcPoint(this.props.text);\r\n        var degree = Array(n);\r\n        degree.fill(0);\r\n        for(var i = 0;i < m;i++){\r\n            degree[src[i]-1] += 1;\r\n            degree[tar[i]-1] += 1;\r\n        }\r\n        var maxDegree = Math.max.apply(null, degree);\r\n        console.log(degree);\r\n        for(var i = 0;i < n;i++){\r\n            var color = \"#ffffff\";\r\n            if (this.props.colored){\r\n                color = \"#\" + ('00' + (parseInt( degree[i]  * 255 / maxDegree)).toString(16)).slice(-2) + (180).toString(16) + (180).toString(16);\r\n                console.log(color);\r\n            }\r\n            nodes.push( <g>\r\n                            <circle cx={x[i]} cy={y[i]} r={20} fill={color} stroke=\"black\"/>);\r\n                            <text x={x[i]} y={y[i]} textAnchor=\"middle\" dominantBaseline=\"central\">{i+1}</text>\r\n                        </g>\r\n            )\r\n        }\r\n        console.log(lines);\r\n        for(var i = 0;i < src.length;i++){\r\n            var s = src[i] - 1;\r\n            var t = tar[i] - 1;\r\n            lines.push(<line x1={x[s]} y1={y[s]} x2={x[t]} y2={y[t]} stroke=\"black\"/>);\r\n        }\r\n        if (x.length === 0){\r\n            return (\r\n                <div></div>\r\n            );\r\n        }else{\r\n            return (   \r\n                <section>\r\n                    <div className=\"container\">\r\n                        <h1 className='title'>結果</h1>\r\n                        <div>\r\n                            <svg width={width} height={height}>\r\n                                {lines}\r\n                                {nodes}\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"buttons is-centered are-medium\">\r\n                            <button className=\"button is-rounded is-primary is-outlined\"><NavLink exact to=\"/\">Back home</NavLink></button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\nfunction updatePosition() {\r\n    for (var i = 0; i < n; ++i) {\r\n      x[i] += vx[i];\r\n      y[i] += vy[i];\r\n    }\r\n}\r\nfunction updateVelocity() {\r\n    applySpringForce(0.01, 50.0);\r\n    applyRepulsiveForce(300.0);\r\n    applyCenteringForce(0.1);\r\n    applyResistanceForce(0.1);\r\n}\r\nfunction applyResistanceForce(k) {\r\n    for (var i = 0; i < n; ++i) {\r\n      vx[i] += -k * vx[i];\r\n      vy[i] += -k * vy[i];\r\n    }\r\n}\r\nfunction applyCenteringForce(strength) {\r\n    for (var i = 0; i < n; ++i) {\r\n        vx[i] += (width / 2 - x[i]) * strength;\r\n        vy[i] += (height / 2 - y[i]) * strength;\r\n    }\r\n}\r\n\r\nfunction applyRepulsiveForce(q) {\r\n    for (var i = 0; i < n; ++i) {\r\n        for (var j = 0; j < n; ++j) {\r\n            if (i === j) {\r\n                continue;\r\n            }\r\n            var d = distance(i, j);\r\n            var w = -q / (d * d);\r\n            vx[i] += (x[j] - x[i]) * w;\r\n            vy[i] += (y[j] - y[i]) * w;\r\n        }\r\n    }\r\n}\r\nfunction applySpringForce(k, L) {\r\n    for (var i = 0; i < m; ++i) {\r\n      var s = src[i]-1;\r\n      var t = tar[i]-1;\r\n      var d = distance(s, t);\r\n      var theta = Math.atan(y[s] - y[t], x[s] - x[t]);\r\n      var w = k * (L - d);\r\n      vx[s] += w * Math.cos(theta);\r\n      vy[s] += w * Math.sin(theta);\r\n      vx[t] -= w * Math.cos(theta);\r\n      vy[t] -= w * Math.sin(theta);\r\n    }\r\n}\r\nfunction distance(i, j) {\r\n    return Math.max(minDistance, Math.sqrt( Math.pow( x[i] - x[j], 2 ) + Math.pow( y[i] - y[j], 2 ) ));\r\n}\r\nfunction calcPoint(text){\r\n\r\n    const input = text.replace(/(\\r\\n|\\n|\\r)/gm, ' ').split(' ');\r\n    n = Number(input[0]);\r\n    m = Number(input[1]);\r\n    x = [];\r\n    y = [];\r\n    vx = [];\r\n    vy = [];\r\n    src = [];\r\n    tar = []\r\n    for(var i = 0;i < n;i++){\r\n        x.push(Math.random() * width);\r\n        y.push(Math.random() * height);\r\n        vx.push(0.0);\r\n        vy.push(0.0);\r\n    }\r\n    for(var i = 1;i <= m; i++){\r\n        src.push(Number(input[i*2]));\r\n        tar.push(Number(input[i*2 + 1]));\r\n    }\r\n    for(var i = 0; i < 100;i++){\r\n        console.log(x);\r\n        updatePosition();\r\n        updateVelocity();\r\n    }   \r\n\r\n}\r\nexport default CalculationContent;","\r\nimport React from 'react';\r\nclass Header extends React.Component {\r\n    render() {\r\n        return ( \r\n        <section class=\"hero is-medium is-bold is-primary\">\r\n        <div class=\"hero-body\">\r\n          <div class=\"container has-text-centered\">\r\n            <h1 class=\"title\">\r\n              Make Graph\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </section>\r\n        \r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputContent extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    saveText(){\r\n        var text = document.querySelector('textarea').value;\r\n        return this.props.update(text);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                {/*エラー処理しなきゃいけないのマジでだるい */}\r\n                <div className=\"content\"></div>\r\n                <div className=\"content\">\r\n                    <h1 className=\"title\">グラフを入力してください</h1>\r\n                    <label class=\"checkbox\">\r\n                        <input type=\"checkbox\" onChange={() => {this.props.setCol()}}/>\r\n                            出次数に応じて色を付ける\r\n                    </label>\r\n                </div>\r\n                \r\n                <section>\r\n                    <textarea className='textarea is-hovered' rows='10' id ='input' name='input'>\r\n                        \r\n                    </textarea>\r\n                </section>\r\n                <div>\r\n                    {/* saveというボタンを押すとonclickでstateの値を変更してあげる */}\r\n                    {/* このページの下に表示しようぜ */}\r\n                    <div className=\"buttons is-centered are-medium\">\r\n                    <button className=\"button is-rounded is-primary is-outlined\" type='submit' onClick={() => {this.saveText()}}>Look Result</button>\r\n                        <button className='button is-rounded is-primary is-outlined '><NavLink exact to=\"/\">Back home</NavLink></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default InputContent;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        var twitter_style = {\r\n            color : \"cyan\",  \r\n        }\r\n        var github_style = {\r\n            color : \"black\",\r\n        }\r\n        var qiita_style = {\r\n            width:40,\r\n        }\r\n        return (\r\n            <footer className=\"footer has-text-centered\">\r\n                <div>\r\n                    <div className=\"columns\">\r\n                        <span className=\"column\"></span>\r\n                        <span className=\"column\"><a href=\"https://twitter.com/nayuta999999\"><i className=\"fab fa-twitter fa-2x\" style={twitter_style}></i></a></span>\r\n                        <span className=\"column\"><a href=\"https://github.com/Yuta123456\" ><i className=\"fab fa-github fa-2x\" style={github_style}></i></a></span>\r\n                        <span className=\"column\"><a href=\"https://qiita.com/nayuta9999\" ><img src=\"favicon.png\" style={qiita_style}></img></a></span>\r\n                        <span className=\"column\"></span>\r\n                    </div>\r\n                    <p class=\"title\">By Tanaka Yuta</p>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\n//screens\r\nimport Header from './Header';\r\nimport InputContent from './InputContent';\r\nimport CalculationContent from './CalculationContent';\r\nimport Footer from './Footer';\r\nclass Input extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          text: '',\r\n          color: false,\r\n        }\r\n    }\r\n    textUpdate(input){\r\n        this.setState({text : input});\r\n    }\r\n    setColored(){\r\n      this.setState({color : ! this.state.color});\r\n      console.log(this.state.color);\r\n    }\r\n    render() {\r\n        // return では一要素しか返せないところをReactFragmentで囲ってやることでOK\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <InputContent update={(x) => this.textUpdate(x)} setCol = {() => this.setColored()}/>\r\n                <CalculationContent text={this.state.text} colored={this.state.color}/>\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Input;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nclass DescriptionContent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"content\"></div>\r\n                <div className='content'>\r\n                    <h1 className='title'>使用方法</h1>\r\n                    描画したいグラフを入力してください。\r\n                    まず一行目にノード数とエッジの数を空白区切りで入力。\r\n                    その後に、辺の接続情報を空白区切りで入力してください\r\n                </div>\r\n                <div className='content'>\r\n                    <h1 className='title'>入力例</h1>\r\n                    8 12<br/>\r\n                    1 6<br/>\r\n                    1 7<br/>\r\n                    1 8<br/>\r\n                    2 5<br/>\r\n                    2 6<br/>\r\n                    3 5<br/>\r\n                    3 6<br/>\r\n                    4 5<br/>\r\n                    4 8<br/>\r\n                    5 6<br/>\r\n                    5 7<br/>\r\n                    7 8<br/>\r\n                </div>\r\n                <div>\r\n                    <h1 className='title'>出力例</h1>\r\n                    <img src=\"example.png\"></img>\r\n                </div>\r\n                <div className=\"buttons is-centered are-medium\">\r\n                    <button className='button is-rounded is-primary is-outlined '><NavLink exact to=\"/Input\">Let's make graph</NavLink></button>\r\n            \r\n                </div>\r\n                <div>\r\n                    <h1 className='title'>参考文献</h1>\r\n                    <a href=\"https://computing2.vdslab.jp/\">https://computing2.vdslab.jp/</a><br/>\r\n                    <a href=\"https://esa-pages.io/p/sharing/8704/posts/496/3ea7904b529048712e3e.html#SVG%EF%BC%88Scalable%20Vector%20Graphics%EF%BC%89\">https://esa-pages.io/p/sharing/8704/posts/496/3ea7904b529048712e3e.html#SVG%EF%BC%88Scalable%20Vector%20Graphics%EF%BC%89</a>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default DescriptionContent;","import React from 'react';\r\n\r\n//screens\r\nimport Header from './Header';\r\nimport DescriptionContent from './DescriptionContent';\r\nimport Footer from './Footer';\r\nclass Description extends React.Component {\r\n    render() {\r\n        // return では一要素しか返せないところをReactFragmentで囲ってやることでOK\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <DescriptionContent />\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Description;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Input from './screens/Input';\n//import Result from './screens/Result';\nimport Description from './screens/Description';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n            <Route exact path=\"/\" component={Description} />\n            <Route exact path=\"/Input\" component={Input} />\n            {/*<Route exact path=\"/Result\" component={Result} />*/}\n            <Route render={() => (<p>Page not found.</p>)} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css'\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}